export default function getCameraData(
  phone,
  primary,
  uw,
  telephoto,
  periscope,
  macro,
  mainFrontCamera,
  frontPrimary,
  frontSecondary
) {

  return [
    {
      title: 'Primary',
      phone_data: phone.rearCameras.primary,
      mm: primary?.mm,
      sensor_size: primary?.sensor_size,
      aperture: primary?.aperture,
      ois: primary?.ois,
      eis: primary?.eis,
      pdaf: primary?.pdaf,
    },
    {
      title: 'Ultra-wide',
      phone_data: phone.rearCameras?.ultrawide,
      mm: uw?.mm,
      sensor_size: uw?.sensor_size,
      aperture: uw?.aperture,
      ois: uw?.ois,
      eis: uw?.eis,
      pdaf: uw?.pdaf,
    },
    {
      title: 'Telephoto',
      phone_data: phone.rearCameras?.telephoto,
      paren_data: telephoto ? `${telephoto?.opt_zoom}` : null,
      mm: telephoto?.mm,
      opt_zoom: telephoto?.opt_zoom,
      sensor_size: telephoto?.sensor_size,
      aperture: telephoto?.aperture,
      ois: telephoto?.ois,
      eis: telephoto?.eis,
      pdaf: telephoto?.pdaf,
    },
    {
      title: 'Periscope',
      phone_data: phone.rearCameras?.periscope,
      paren_data: periscope ? `${periscope?.opt_zoom}` : null,
      mm: periscope?.mm,
      opt_zoom: periscope?.opt_zoom,
      sensor_size: periscope?.sensor_size,
      aperture: periscope?.aperture,
      ois: periscope?.ois,
      eis: periscope?.eis,
      pdaf: periscope?.pdaf,
    },
    {
      title: 'Macro',
      phone_data: phone.rearCameras?.macro,
      mm: macro?.mm,
      sensor_size: macro?.sensor_size,
      aperture: macro?.aperture,
      ois: macro?.ois,
      eis: macro?.eis,
      pdaf: macro?.pdaf,
    },
    {
      title: 'Selfie (front)',
      phone_data: (frontPrimary?.mp && frontPrimary?.mp + ' MP') || mainFrontCamera,
      mm: frontPrimary?.mm,
      sensor_size: frontPrimary?.sensor_size,
      aperture: frontPrimary?.aperture,
      ois: frontPrimary?.ois,
      eis: frontPrimary?.eis,
      pdaf: frontPrimary?.pdaf,
    },
    {
      title: 'Secondary Selfie (front)',
      phone_data: frontSecondary?.mp && frontSecondary?.mp + ' MP',
      mm: frontSecondary?.mm,
      sensor_size: frontSecondary?.sensor_size,
      aperture: frontSecondary?.aperture,
      ois: frontSecondary?.ois,
      eis: frontSecondary?.eis,
      pdaf: frontSecondary?.pdaf,
    },
  ];
}
